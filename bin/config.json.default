{
	"github.com/xpwu/go-log/log:config": {
		"// level": "0:DEBUG; 1:INFO; 2:WARNING; 3:ERROR; 4:FATAL",
		"level": 0
	},
	"github.com/xpwu/go-stream/push:config": {
		"Servers": [
			{
				"Net": {
					"// Listen": "1、xxx.xxx.xxx.xxx:[0-9] 2、:[0-9] 3、pipe:[0-9] 4、unix:|xxx|xxx|xxx|xxx.socket:0",
					"Listen": "",
					"// MaxConnections": "-1:not limit",
					"MaxConnections": -1,
					"TLS": false,
					"TlsFile": {
						"// PrivateKeyPEMFile": "support relative path, must PEM encode data",
						"PrivateKeyPEMFile": "",
						"// CertPEMFile": "support relative path, must PEM encode data",
						"CertPEMFile": ""
					}
				},
				"// AckTimeout": "uint:s;0: no ack",
				"AckTimeout": 30
			}
		]
	},
	"github.com/xpwu/go-stream/websocket:config": {
		"Servers": [
			{
				"Net": {
					"// Listen": "1、xxx.xxx.xxx.xxx:[0-9] 2、:[0-9] 3、pipe:[0-9] 4、unix:|xxx|xxx|xxx|xxx.socket:0",
					"Listen": "",
					"// MaxConnections": "-1:not limit",
					"MaxConnections": -1,
					"TLS": false,
					"TlsFile": {
						"// PrivateKeyPEMFile": "support relative path, must PEM encode data",
						"PrivateKeyPEMFile": "",
						"// CertPEMFile": "support relative path, must PEM encode data",
						"CertPEMFile": ""
					}
				},
				"// HeartBeat_s": "unit:s",
				"HeartBeat_s": 240,
				"Origin": [
					"*"
				],
				"Proxy": {
					"Url": "127.0.0.1:80/${fhttp_api}",
					"Headers": [
						{
							"Key": "Pushurl",
							"Value": "127.0.0.1:7999/${pushtoken}"
						}
					]
				}
			}
		]
	},
	"github.com/xpwu/go-tinyserver/http:serverConfig": {
		"Net": {
			"// Listen": "1、xxx.xxx.xxx.xxx:[0-9] 2、:[0-9] 3、pipe:[0-9] 4、unix:|xxx|xxx|xxx|xxx.socket:0",
			"Listen": "",
			"// MaxConnections": "-1:not limit",
			"MaxConnections": -1,
			"TLS": false,
			"TlsFile": {
				"// PrivateKeyPEMFile": "support relative path, must PEM encode data",
				"PrivateKeyPEMFile": "",
				"// CertPEMFile": "support relative path, must PEM encode data",
				"CertPEMFile": ""
			}
		},
		"// HostName": "leftmost match, []: allow all host name",
		"HostName": [],
		"// RootUri": "match_uri = RootUri + api.RegisterUri",
		"RootUri": "/"
	}
}